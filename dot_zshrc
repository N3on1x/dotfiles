# vim: fdm=marker foldenable

# {{{ Powerlevel10k

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# }}}

# {{{ Oh My Zsh

# {{{ Oh My Zsh settings

# Path to your oh-my-zsh installation.
export ZSH="/Users/nnielsen/.oh-my-zsh"

# {{{ Plugins
# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git gh macos brew zsh-syntax-highlighting zsh-autosuggestions wd
  aliases common-aliases nvm npm node pyenv golang)

# {{{ TMUX Plugin settings
# ZSH_TMUX_AUTOSTART=true
# ZSH_TMUX_AUTOQUIT=true
# ZSH_TMUX_AUTOCONNECT=true
# ZSH_TMUX_DEFAULT_SESSION_NAME="default"
# ZSH_TMUX_TERMFIX=false
# }}}


# }}}

# {{{ Theme
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
#ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )
# }}}

# {{{ Other settings
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# }}} Other settings

# }}}

# Initialize Oh My Zsh
source $ZSH/oh-my-zsh.sh

# }}}

# {{{ Pyenv

#FIXME: Both in zshrc and zprofile
# Set up shell for Pyenv
# See https://github.com/pyenv/pyenv#set-up-your-shell-environment-for-pyenv
#export PYENV_ROOT="$HOME/.pyenv"
#command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
#if command -v pyenv 1>/dev/null 2>&1; then
  #eval "$(pyenv init -)"
#fi

# To enable auto-activation of virtualenvs with pyenv virtualenv:
#if command -v pyenv-virtualenv &>/dev/null; then
#eval "$(pyenv virtualenv-init -)"
#fi

## Patch for working with python virtualenvs in Vim
## See https://vi.stackexchange.com/a/7654
#if [[ -n $VIRTUAL_ENV && -e "${VIRTUAL_ENV}/bin/activate" ]]; then
###source "${VIRTUAL_ENV}/bin/activate"
#fi

# }}}

# {{{ My personal configuration

# {{{ Set some important path variables

export PATH="/Users/nnielsen/.local/bin:$PATH"

# Add GOBIN to path
export PATH=$PATH:/Users/nnielsen/go/bin

# Completions
fpath=(~/.zsh/completion $fpath)

# }}}

# {{{ Load Completions
autoload -Uz compinit && compinit -i
# }}}

# {{{ Java
# Add Corretto OpenJDK as default java runtime
export JAVA_HOME="/Library/Java/JavaVirtualMachines/amazon-corretto-8.jdk/Contents/Home"
# }}}

# {{{ locale
export LANG='en_US.UTF-8'
# }}}

# {{{ Editor

# Set prefered editor
export EDITOR='nvim'
export VISUAL='nvim'

# Use Vim as man-pager:
export MANPAGER="nvim +Man!"

# }}}

# {{{ Personal aliases

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

# NORMAL ALIASES
alias nvim="nvim --listen /tmp/nvimsocket"
alias vim="nvim"
alias oldvim="\vim"
alias vimdiff="nvim -d"
alias zshconf="chezmoi edit ~/.zshrc"
alias vimconf="chezmoi edit ~/.config/nvim/init.lua"
alias tmuxconf="chezmoi edit ~/.tmux.conf"
alias cm="chezmoi"

# Requires trash-cli to be in path.
# See: https://github.com/sindresorhus/trash-cli
alias rm="trash"

# Enable or disable sleep in battery mode 
# when the lid is closed (requires root permission)
alias sleepoff="sudo pmset -b disablesleep 1"
alias sleepon="sudo pmset -b disablesleep 0"

# gls requires 'coreutils' to be installed with homebrew.
# See: https://formulae.brew.sh/formula/coreutils
alias l="gls -lFh --color --group-directories-first"
alias la="gls -lAFh --color --group-directories-first"

alias clr="clear"

alias home="cd ~"

alias zr="source ~/.zshrc"

# GLOBAL ALIASES
alias -g L="| less"
alias -g J="| jq"

# FUNCTION ALIASES
function dnd(){
  echo $1 $2 | shortcuts run "Sett fokus" | cat
}

# use gitignore.io from command line, e.g. `gi java,python >> .gitignore`
function gi() { curl -sLw n https://www.toptal.com/developers/gitignore/api/$@ ;}

# }}}

# {{{ Set TTY for GPG-Agent
# Reference: https://www.gnupg.org/documentation/manuals/gnupg/Invoking-GPG_002dAGENT.html
GPG_TTY=$(tty)
export GPG_TTY
# }}}

# {{{ Compiler settings
# For compilers to find zlib and bzip2 compression tools installed by Homebrew
export LDFLAGS="-L/usr/local/opt/zlib/lib -L/usr/local/opt/bzip2/lib"
export CPPFLAGS="-I/usr/local/opt/zlib/include -I/usr/local/opt/bzip2/include"
# }}}

# }}}

# {{{ >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/nnielsen/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
  ##eval "$__conda_setup"
else
  ##if [ -f "/Users/nnielsen/miniconda3/etc/profile.d/conda.sh" ]; then
      ##. "/Users/nnielsen/miniconda3/etc/profile.d/conda.sh"
  ##else
      ##export PATH="/Users/nnielsen/miniconda3/bin:$PATH"
  ##fi
fi
unset __conda_setup
# <<< conda initialize <<<
# }}}

# {{{ FZM
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# }}}

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/nnielsen/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/nnielsen/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/nnielsen/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/nnielsen/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
